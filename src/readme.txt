
Фреймворк для создания графиков

Структура папок
1) charts - тут находятся все графики, созданные на этом фреймворке
2) core - ядро фреймворка, отвечает за рендеринг, прием событий и передачу в компоненты

core/elements - тут находятся элементы
components - пользовательские компоненты, которые можно использовать в разных графиках


График можно разделить на 3 составляющих

1) Input.
   Отвечает за события ввода(мышь, тач), конвертирует в локальные величины(относильно холста) и передает элементам.
   Доступные события:
      1. move
      2. leave
      3. down
      4. up
   
2) Element.
   Это простые элементы, которые рисуются холсте. Имеют доступ к canvas контексту, событиям ввода(Input)
   Каждый элемент реализует метод render(ctx, input, time), который рисует на холсте, используя API canvas.

   Доступные элементы:
      1. Circle
      2. Line - используется для построения линий. Обязательно должен находиться в LineGroup
      3. Rectangle
      4. Text

   Особые элементы:
      1. DragScaling - это прозрачный прямоугольник, который может растягиваться и перетаскиваться пользователем 
         Используется в компоненте Navigator
      2. LineGroup - рендер для линий, чтобы отрисовать путь построенный элементами Line.
         Используется только совместно с Line. Создан с целью оптимизации рендеринга
      3. Position - легкий компонент, который служит для объединения нескольких элементов и/или их позиционирования

   Элементы можно вкладывать друг в друга, рендеринг идет от дочерних элементов к родительским

3) Component
   Это строительные блоки, из которых, как из конструктора, собираются графики. Могут состоять из других компонентов и элементов
   Имеют доступ к данным, теме, языку, анимациям и возможностью вызывать перерисовку холста при необходимости
   
   Компоненты можно условно разделить на два типа:
      1. Те, что выводятся на холст.
         Такие компоненты имеют метод $build(theme, locale), который возвращает Element для рендера
         Например: Navigator, Map
      2. Те, что не выводятся на холст.
         Эти компоненты не имеют метода $build или имеют, но он ничего не возвращает.
         Например Checkboxes - этот компонент ничего не выводит на холст, т.к создает элементы в DOM. 
         Плюс такого подхода в том, что сохраняется простой доступ к состоянию графика.

   Основная разница между ними в наличии метода $build. Поэтому вы сами решаете как будет отображаться ваш компонент, и будет ли вообще отображаться

   Component API

      События, доступные компоненту:
         1. $onTheme(theme) - вызывается при смене темы
         2. $onLocale(locale) - вызывается при смене языка
         3. $onData(data) - вызывается при изменении/получении данных
         4. $onShowColumn(index) - вызывается после того как была скрыта часть данных(column)
         5. $onHideColumn(index) - обратное событию 4

      Методы:
         1. $showColumn(index) - скрыть часть данных(column)
         2. $hideColumn(index) - показать часть данных(column)
         3. $build(theme, locale) - используется для рендеринга компонента.
            Если метод возвращает Element, то он будет отображен на холсте. Доступ к созданному Element'у можно получить с помощью переменной this.$element внутри компонента


   Готовые компоненты:
      1. Navigator - навигатор для миникарты, который нужен для взаимодействия пользователя с миникартов.
         Должен быть вложен в компонент Map
      2. 
      3. Checkboxes - чекбоксы для управления видимостью отдельных данных(column)

4) Chart
   Это базовый класс графика. Отвечает за взаимодействие с компонентами

   Методы:
      1. setTheme(theme) - установить тему
      2. setData(data) - установить данные